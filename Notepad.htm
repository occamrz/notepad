<!DOCTYPE html>
<html style="cursor: auto ! important; height: 100%"><head>
    <meta charset="utf-8">
    <title>Notepad</title><!--089121-->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <meta name="format-detection" content="telephone=no" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="mobile-web-app-capable" content="yes">
    <link rel="icon" href="favicon.png" /><!--152x152 use alpha for transparency-->
    <link rel="apple-touch-icon" href="favicon.png"/>
    <style>
        *:focus {outline: none;}
        body, html
            {
            height: 100%; margin: 0px;
            font-family: sans-serif; 
            font-size: 12pt; 
            background-color: black; 
            color: white;
            }
        #app 
            {
            border: 0px solid blue; 
            overflow: hidden
            }
        #buttons, #input_div
            {
            display: block;
            overflow: hidden
            }
        .icon {opacity: 1.0}
        .icon:active {opacity: 0.3}
            
         /*div {border: 1px solid red}*/
    </style>
</head>

<body>
<div id="width_contrain" style="min-width: 340px; height: 100%;">

<div style="overflow: hidden">

<div style="text-align: center; display: block" id="home">
<img class="icon" src="icons/icon_file.svg" onclick="file_icons()"/>
<img class="icon" src="icons/icon_edit.svg" onclick="edit_icons()"/>
<img class="icon" src="icons/icon_list.svg" onclick="list_icons()"/>
<img class="icon" src="icons/icon_tick.svg" onclick="check_icons()"/>
<img class="icon" src="icons/icon_settings.svg" onclick="settings_icons()"/>
<img class="icon" src="icons/icon_next.svg" onclick="home2_icons()"/>
</div>

<div style="text-align: center; display: none" id="home2">
<img class="icon" src="icons/icon_tools.svg" onclick="tools_icons()"/>
<img class="icon" src="icons/icon_calc.svg" onclick="calc_icons()"/>
<img class="icon" src="icons/icon_blank.svg"/>
<img class="icon" src="icons/icon_blank.svg"/>
<img class="icon" src="icons/icon_blank.svg"/>
<img class="icon" src="icons/icon_next.svg" onclick="home_icons()"/>
</div>

<div style="text-align: center; display: none; opacity: 0.8" id="tools">
<img class="icon" src="icons/icon_home.svg" onclick="home_icons()"/>
<img class="icon" src="icons/icon_html.svg" onclick="html_tog()"/>
<img class="icon" src="icons/icon_wikirem.svg" onclick="wikiRefRemove()"/>
<img class="icon" src="icons/icon_blank.svg"/>
<img class="icon" src="icons/icon_save.svg" onclick="save()"/>
<img class="icon" src="icons/icon_bin.svg" onclick="clearInput()" />
</div>

<div style="text-align: center; display: none; opacity: 0.8" id="calc">
<img class="icon" src="icons/icon_home.svg" onclick="home_icons()"/>
<img class="icon" src="icons/icon_pound.svg" onclick="total()"/>
<img class="icon" src="icons/icon_calc.svg" onclick="calc()"/>
<img class="icon" src="icons/icon_blank.svg"/>
<img class="icon" src="icons/icon_save.svg" onclick="save()"/>
<img class="icon" src="icons/icon_bin.svg" onclick="clearInput()" />
</div>

<div style="text-align: center; display: none; opacity: 0.8" id="file">
<img class="icon" src="icons/icon_home.svg" onclick="home_icons()"/>
<img class="icon" src="icons/icon_copy.svg" onclick="copyInput()"/>
<img class="icon" src="icons/icon_load.svg" onclick="restore()"/>
<img class="icon" src="icons/icon_save_file.svg" onclick="save_file()"/>
<img class="icon" src="icons/icon_save.svg" onclick="save()"/>
<img class="icon" src="icons/icon_bin.svg" onclick="clearInput()" />
</div>

<div style="text-align: center; display: none; opacity: 0.8" id="settings">
<img class="icon" src="icons/icon_home.svg" onclick="home_icons()"/>
<img class="icon" src="icons/icon_size.svg" onclick="sizeChange()"/>
<img class="icon" src="icons/icon_max_min.svg" onclick="fullscreen_toggle()"/>
<img class="icon" src="icons/icon_blank.svg"/>
<img class="icon" src="icons/icon_save.svg" onclick="save()"/>
<img class="icon" src="icons/icon_bin.svg" onclick="clearInput()" />
</div>

<div style="text-align: center; display: none; opacity: 0.8" id="edit">
<img class="icon" src="icons/icon_home.svg" onclick="home_icons()"/>
<img class="icon" src="icons/icon_up.svg" onclick="newline()"/>
<img class="icon" src="icons/icon_down.svg" onclick="newlineBelow()"/>
<img class="icon" src="icons/icon_unindent.svg" onclick="unindent()"/>
<img class="icon" src="icons/icon_save.svg" onclick="save()"/>
<img class="icon" src="icons/icon_bin.svg" onclick="clearInput()" />
</div>

<div style="text-align: center; display: none; opacity: 0.8" id="list">
<img class="icon" src="icons/icon_home.svg" onclick="home_icons()"/>
<img class="icon" src="icons/icon_bullet.svg" onclick="bullet('• ')"/>
<img class="icon" src="icons/icon_enter.svg" onclick="enter()"/>
<img class="icon" src="icons/icon_blank.svg"/>
<img class="icon" src="icons/icon_save.svg" onclick="save()"/>
<img class="icon" src="icons/icon_bin.svg" onclick="clearInput()" />
</div>

<div style="text-align: center; display: none; opacity: 0.8" id="check">
<img class="icon" src="icons/icon_home.svg" onclick="home_icons()"/>
<img class="icon" src="icons/icon_spell.svg" onclick="spellCheck()"/>
<img class="icon" src="icons/icon_dictionary.svg" onclick="dict()"/>
<img class="icon" src="icons/icon_blank.svg"/>
<img class="icon" src="icons/icon_save.svg" onclick="save()"/>
<img class="icon" src="icons/icon_bin.svg" onclick="clearInput()" />
</div>
</div>
<script> /* UI */
function init_ui()
    {
    home_id = document.getElementById('home')
    home2_id = document.getElementById('home2')
    file_id = document.getElementById('file')
    settings_id = document.getElementById('settings')
    edit_id = document.getElementById('edit')
    check_id = document.getElementById('check')
    tools_id = document.getElementById('tools')
    list_id = document.getElementById('list')
    calc_id = document.getElementById('calc')
    }
function tools_icons()
    {
    home2_id.style.display = 'none'
    tools_id.style.display = 'block'
    }
function home2_icons()
    {
    home_id.style.display = 'none'
    home2_id.style.display = 'block'
    }
function settings_icons()
    {
    home_id.style.display = 'none'
    settings_id.style.display = 'block'
    }
function check_icons()
    {
    home_id.style.display = 'none'
    check_id.style.display = 'block'
    }
function edit_icons()
    {
    home_id.style.display = 'none'
    edit_id.style.display = 'block'
    }
function file_icons()
    {
    home_id.style.display = 'none'
    file_id.style.display = 'block'
    }
function list_icons()
    {
    home_id.style.display = 'none'
    list_id.style.display = 'block'
    }
function calc_icons()
    {
    home2_id.style.display = 'none'
    calc_id.style.display = 'block'
    }
function home_icons()
    {
    calc_id.style.display = 'none'
    list_id.style.display = 'none'
    tools_id.style.display = 'none'
    file_id.style.display = 'none'
    settings_id.style.display = 'none'
    edit_id.style.display = 'none'
    check_id.style.display = 'none'
    home2_id.style.display = 'none'
    home_id.style.display = 'block'
    }

init_ui()
</script>
<div style="
    text-align: center; 
    overflow: hidden; 
    height: calc(100% - 65px);
    border: 0px solid blue">
            <textarea 
                id="inputBox" 
                wrap="hard"
                style="width: calc(100% - 45px); /* 5 + 2*margi */
                    max-width: 900px;
                    margin: 0px 20px 0px 20px;
                    border: 0px solid green;
                    height: 100%;
                    background-color: #111;
                    /* white-space: pre; */ 
                    font-family:Consolas,
                        Monaco,
                        Lucida Console,
                        Liberation Mono,
                        DejaVu Sans Mono,
                        Bitstream Vera Sans Mono,
                        Courier New, 
                        monospace;
                    resize: none; 
                    color: #fff"
                onkeydown="text = this.value;
                    startPos = this.selectionStart; 
                    const currentCode = event.which || event.code; 
                    var key = event.key
                    //console.log(key, currentCode)
                    if (key == 'Tab') 
                        {
                        event.preventDefault();
                        indent_fn();
                        // put cursor at start position plus tab
                        this.selectionStart = startPos + 4;
                        this.selectionEnd = startPos + 4;
                        }
                    else if ((key == 'Enter')||(currentCode == 13))
                        {
                        //console.log('enter')
                        event.preventDefault();
                        var textNew = text.slice(0, startPos); // text to the cursor
                        var textNewList = textNew.split('\n')
                        var textLastLine = textNewList[textNewList.length -1] + '.'
                        var indent = textLastLine.search(/\S/)
                        if (indent < 0) {indent = 0}
                        //console.log(textLastLine, indent);
                        var indent_s = ''
                        for (var i = 0; i < indent; i++)
                            {
                            indent_s += ' '
                            }
                        textNew += '\n' + indent_s;
                        textNew += text.slice(startPos);
                        this.value = textNew;
                        startPos += 1 + indent;
                        this.selectionStart = startPos;
                        this.selectionEnd = startPos;
                        }
                    else if ((key == 'Backspace')||(currentCode == 8))
                        {
                        var textNew = text.slice(0, startPos); // text to the cursor
                        var textNewList = textNew.split('\n') // split into lines
                        var textLastLine = textNewList[textNewList.length -1]
                        var textLastLineLen = textLastLine.length
                        var textTest = textLastLine.replace(new RegExp(' ', 'g'), '') // remove all blanks
                        var start = true
                        if ((textTest == '')&&(textLastLineLen > 0))
                            {
                            event.preventDefault(); // Stop the actual backspace action
                            textNewList[textNewList.length -1] = ''
                            var text_out = ''
                            for (var line of textNewList)
                                {
                                //console.log(line)
                                if (start){text_out = line; start = false} else {text_out += '\n' + line}
                                }
                            text_out += text.slice(startPos)
                            this.value = text_out
                            startPos -= textLastLineLen
                            this.selectionStart = startPos;
                            this.selectionEnd = startPos;
                            }
                        }
                        "
                ></textarea>
</div>



</div>
</body>
<!-- load the dictionary-->
<script type="text/javascript" src="13630.txt"></script>
<script language="JavaScript">
//console.log('version: 05')
var fontSize = 12
var wrapType = 'pre'
var full_screen = false


inputBox = document.getElementById('inputBox')
// get the handle to the input box

load_settings()

textout = ''
// output text

function wikiRefRemove() // 058091
    {
    var inputBoxId = document.getElementById('inputBox')
    var text = inputBoxId.value
    var character_l = text.split("")
    var state = ''
    var outStr = ''
    var bracket_cnt = 0
    for (var index in character_l)
        {
        var character = character_l[index]

        if (character == '(' && bracket_cnt == 0) // ignore first bracket
            {
            state = 'bracket'
            bracket_cnt += 1
            }
        else if (state == 'bracket' && character == ')')
            {
            state = ''
            }
        else if (character == '[' && state !== 'bracket')
            {
            state = 'open'
            }
        else if (character == ']' && state !== 'bracket')
            {
            state = ''
            }
        else if (state !== 'open' && state !== 'bracket')
            {
            outStr += character
            }
        }
    outStr = outStr.replace(new RegExp('  ', 'g'), ' ') // Remove double spaces
    outStr = outStr.replace(new RegExp('\\"', 'g'), '\'') // Remove "
    outStr = outStr.replace(new RegExp('“', 'g'), '\'')
    outStr = outStr.replace(new RegExp('”', 'g'), '\'')
    inputBoxId.value = outStr
    }


function calc_line(s) // 057111
    {
    var s_list = s.split('=')
    if (s_list.length == 2)
        {
        return s_list[0].trim() + ' = ' + eval(s_list[0])
        }
    return s
    }
    
function calc() // 057111
    {
    var inputBoxId = document.getElementById('inputBox')
    var text = inputBoxId.value
    var text_list = text.split('\n')
    var o = ''
    for (var line of text_list)
        {
        o += calc_line(line) + '\n'
        }
    inputBoxId.value = o.slice(0, -1)
    return
    }


function total_line(s)
    {
    //console.log(s)
    var chrs = s.split("")
    var state = ''
    var n1 = ''
    var n2 = ''
    for (var chr of chrs)
        {
        var ord = chr.charCodeAt()
        if (state == '')
            {
            if ((chr == '.') || (ord >= 48 && ord <= 57) || chr == '-') // number or -
                {
                n1 = chr
                state = 'n1'
                continue
                }
            if (chr == '(') // ignore content of parenthesis
                {
                state = 'ignore'
                continue
                }
            }
        else if (state == 'n1')
            {
            if (chr == '@')
                {
                state = 'at'
                continue
                }
            if ((chr == '.') || (ord >= 48 && ord <= 57))
                {
                n1 += chr
                }
            }
        else if (state == 'at')
            {
            if ((chr == '.') || (ord >= 48 && ord <= 57) || (chr == '-'))
                {
                n2 += chr
                }
            }
        else if (state == 'ignore') // ignore contents of parenthesis
            {
            if (chr == ')')
                {
                state = ''
                continue
                }
            }
        }
    //console.log(n1, n2)
    if (n1 == '') {return 0.0}
    if (n2 != '') {return parseFloat(n1) * parseFloat(n2)}
    return parseFloat(n1)
    }

function total() // 055101
    {
    var inputBoxId = document.getElementById('inputBox')
    var text = inputBoxId.value
    var text_list = text.split('\n')
    var total_val = 0.0
    var o = ''
    for (var line of text_list)
        {
        if (line == '---') {break} // End marker
        total_val += total_line(line)
        o += line + '\n'
        }
    o += '---\n' // end marker
    o += 'Total: ' + total_val.toFixed(2) + '\n'
    inputBoxId.value = o
    return
    }

function save_file()
    {
    var inputBoxId = document.getElementById('inputBox')
    var text = inputBoxId.value
    var element = document.createElement('a')
    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text))
    element.setAttribute('download', 'Note.txt')
    element.style.display = 'none'
    document.body.appendChild(element)
    element.click()
    document.body.removeChild(element)
    }

function fullscreen_toggle() // 22012911
    {
    if (!full_screen)
        {
    var docElm = document.documentElement;
    if (docElm.requestFullscreen) {
        docElm.requestFullscreen();} 
    else if (docElm.msRequestFullscreen) {
        docElm.msRequestFullscreen();} 
    else if (docElm.mozRequestFullScreen) {
        docElm.mozRequestFullScreen();}
    else if (docElm.webkitRequestFullScreen) {
        docElm.webkitRequestFullScreen();}
        full_screen = true
        }
    else
        {
        if (document.exitFullscreen) {
            document.exitFullscreen();}
        else if (document.msExitFullscreen) {
            document.msExitFullscreen();}
        else if (document.mozCancelFullScreen) {
            document.mozCancelFullScreen();}
        else if (document.webkitCancelFullScreen) {
            document.webkitCancelFullScreen();}
        full_screen = false
        }
    }


function word_search(my_word)
    {
    var o = ''
    var word_search_s = '^'+my_word.toLowerCase()+'$';
    word_search_s = word_search_s.replace(/\*/g,'.*');
    word_search_s = word_search_s.replace(/\?/g,'.');
    //console.log(word_search_s);
    word_cnt = 0;
    for (word_id in word_list)
        {
        var word = word_list[word_id];
        if (word.search(word_search_s) >= 0)
            {
            o += word+' ';
            word_cnt += 1;
            }
        if (word_cnt > 100){break;}
        }
    return o
    } 


function dict()
    {
    var search_word = window.prompt("Enter word with *", "")
    window.alert(word_search(search_word))
    var inputBoxId = document.getElementById('inputBox') // So we can focus back on it
    inputBoxId.focus();
    }
    
function spellCheck()
    {
    /* this code to just spell check a selection ’'…‘
    var textAllId = document.getElementById('inputBox')
    var textAll = textAllId.value
    var startLoc = textAllId.selectionStart
    var endLoc = textAllId.selectionEnd
    var text = textAll.slice(startLoc, endLoc) */
    var inputBoxId = document.getElementById('inputBox')
    var text = inputBoxId.value
    text = text.replace(new RegExp('’|‘', 'g'), "'")
    text = text.replace(new RegExp('“', 'g'), '"')
    text = text.replace(new RegExp('”', 'g'), '"')
    text = text.replace(new RegExp('\\.\\.\\.|…', 'g'), ' ')
    text = text.replace(new RegExp('\\[|\\]|\\(|\\)', 'g'), ' ')
    text = text.replace(new RegExp('/|\\.|\\?|,|\n|!|,|\\"|:|;', 'g'), ' ')
    text = text.replace(new RegExp(" '|' ", 'g'), ' ')
    text = text.replace(new RegExp("'s", 'g'), '')
    text = text.replace(new RegExp('-|–', 'g'),' ')
    //window.alert(text)
    var text_list = text.split(' ')
    //console.log(text_list)
    var s = '' // spelling
    var a = '' // ask
    for (var word of text_list)
        {
        if (word.length > 0)
            {
            if (word_list.indexOf(word.toLowerCase()) < 0)
                {
                if (s == '') { s += word}
                    else { s += ', ' + word} 
                
                }
            if (ask_list.hasOwnProperty(word.toLowerCase()))
                {
                a += word + ': ' + ask_list[word.toLowerCase()] + '\n'
                }
            }
        }
    window.alert('> Spelling: \n' + s + '\n> Check meaning: \n' + a)
    inputBoxId.focus();
    }
    
function clearInput() 
    {
    inputBox.value = ''
    textout = ''
    }
    
function copyInput() 
    {
    inputBox.select()
    document.execCommand('copy')
    }

function clear() 
    {
    inputBox.value = '' 
    }

function print(string)
    {
    textout += string + '\n'
    }

function sizeChange()
    {
    fontSize += 5
    if(fontSize > 30){fontSize = 12}
    var fontSizeStr = fontSize + 'px'
    inputBox.style.fontSize = fontSizeStr
    localStorage['2202180802'] = fontSizeStr
    //console.log(fontSizeStr)
    }
    
function wrapChange()
    {
    if (wrapType == 'pre'){wrapType = 'normal'} else {wrapType = 'pre'}
    inputBox.style.whiteSpace = wrapType
    //console.log(wrapType)
    }

function save()
    {
    localStorage['2202180801'] = inputBox.value
    //console.log(localStorage)
    }
    
function load_settings()
    {
    if (localStorage.hasOwnProperty('2202180802'))
        {
        inputBox.style.fontSize = localStorage['2202180802']
        }
    }

function restore()
    {
    if (localStorage.hasOwnProperty('2202180801'))
        {
        inputBox.value = localStorage['2202180801']
        }
    else
        {
        //console.log(1)
        }
    }
    
function newlineBelow()
    { // soft enter key
    var inputBoxId = document.getElementById('inputBox')
    var startPos = inputBoxId.selectionStart
    var text = inputBoxId.value
    
    var textNew = text + '\n'
    
    inputBoxId.value = textNew;
    inputBoxId.scrollTop = inputBoxId.scrollHeight;
    inputBoxId.focus();
    }
    
html_tog_state = 'Html'
function html_tog()
    {
    var inputBoxId = document.getElementById('inputBox')
    var htmlId = document.getElementById('html') // Button
    var text = inputBoxId.value
    if (html_tog_state == 'UnHtml') // Use button value as toggle
        { // Convert back to normal text
        text = text.replace(/<br\/>/g,'\n')
        text = text.replace(/&nbsp;/g,' ')
        text = text.replace(/&lt;/g,'<')
        text = text.replace(/&#91;/g,'[')
        text = text.replace(/&#93;/g,']')
        html_tog_state="Html"
        }
    else
        { // Convert to html text
        text = text.replace(/</g,'&lt;')
        text = text.replace(/\[/g,'&#91;')
        text = text.replace(/\]/g,'&#93;')
        text = text.replace(/\n/g,'<br/>')
        text = text.replace(/    /g,'&nbsp;&nbsp;&nbsp;&nbsp;')
        html_tog_state="UnHtml"
        }
    inputBoxId.value = text
    inputBoxId.scrollTop = inputBoxId.scrollHeight
    inputBoxId.focus()
    }
    
function newline()
    { // soft enter key
    var inputBoxId = document.getElementById('inputBox')
    var startPos = inputBoxId.selectionStart
    var text = inputBoxId.value
    
    var textNew = '\n' + text
    
    inputBoxId.value = textNew;

    inputBoxId.scrollTop = 0;
    inputBoxId.focus();
    inputBoxId.setSelectionRange(0,0);
    }

function enter()
    { // soft enter key
    var inputBoxId = document.getElementById('inputBox')
    var startPos = inputBoxId.selectionStart
    var text = inputBoxId.value
    
    var textNew = text.slice(0, startPos);
    var textNewList = textNew.split('\n')
    var textLastLine = textNewList[textNewList.length -1] + '.'
    var indent = textLastLine.search(/\S/)
    if (indent < 0) {indent = 0}
    //console.log(textLastLine, indent);
    textNew += '\n' + ' '.repeat(indent);
    textNew += text.slice(startPos);
    inputBoxId.value = textNew;
    startPos += 1 + indent;
    inputBoxId.selectionStart = startPos;
    inputBoxId.selectionEnd = startPos;
    }

function bullet(bul_str)
    {
    var textAllId = document.getElementById('inputBox')
    var textAll = textAllId.value
    var startLoc = textAllId.selectionStart
    var endLoc = textAllId.selectionEnd

    var textBefore = textAll.slice(0, startLoc)
    var textS = textAll.slice(startLoc, endLoc)
    var textEnd = textAll.slice(endLoc, textAll.length)
    
    var textL = textS.split('\n')
    var textO = ''
    for (var i in textL)
        {
        var textLine = textL[i]
        var spaces = 0
        for (var j in textLine) {if (textLine[j] !== ' '){break}}
        textLine = textLine.trim()
        textO += ' '.repeat(j) + bul_str + textLine + '\n'
        }
    
    inputBox.value = textBefore + textO.slice(0, -1) + textEnd
    }

function number()
    {
    var textAllId = document.getElementById('inputBox')
    var textAll = textAllId.value
    var startLoc = textAllId.selectionStart
    var endLoc = textAllId.selectionEnd

    var textBefore = textAll.slice(0, startLoc)
    var textS = textAll.slice(startLoc, endLoc)
    var textEnd = textAll.slice(endLoc, textAll.length)
    
    var textL = textS.split('\n')
    var textO = ''
    for (var i in textL)
        {
        var textLine = textL[i]
        var spaces = 0
        for (var j in textLine) {if (textLine[j] !== ' '){break}}
        textLine = textLine.trim()
        var number_val = parseInt(i) + 1
        //number_val = j
        textO += ' '.repeat(j) + number_val + '. ' + textLine + '\n'
        }
    
    inputBox.value = textBefore + textO.slice(0, -1) + textEnd
    }

function unindent()
    {
    var textAllId = document.getElementById('inputBox')
    var textAll = textAllId.value
    var startLoc = textAllId.selectionStart
    var endLoc = textAllId.selectionEnd

    var textBefore = textAll.slice(0, startLoc)
    var textS = textAll.slice(startLoc, endLoc)
    var textEnd = textAll.slice(endLoc, textAll.length)
    
    var textL = textS.split('\n')
    var textO = ''
    for (var i in textL)
        {
        textO += textL[i].slice(4) + '\n'
        }
    
    inputBox.value = textBefore + textO.slice(0, -1) + textEnd
    }

        
function indent_fn()
    {
    var textAllId = document.getElementById('inputBox')
    var textAll = textAllId.value
    var startLoc = textAllId.selectionStart
    var endLoc = textAllId.selectionEnd

    var textBefore = textAll.slice(0, startLoc)
    var textS = textAll.slice(startLoc, endLoc)
    var textEnd = textAll.slice(endLoc, textAll.length)
    
    var textL = textS.split('\n')
    var textO = ''
    for (var i in textL)
        {
        textO += '    ' + textL[i] + '\n'
        }
    
    inputBox.value = textBefore + textO.slice(0, -1) + textEnd
    }
    
</script>

</html>
